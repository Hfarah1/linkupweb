{% extends 'basefront.html.twig' %}

{% block title %}Order List | LIINK UP{% endblock %}

{% block body %}
<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Order List</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Order List</li>
    </ol>
</div>
<!-- Single Page Header End -->

<!-- Flash Messages -->
{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="container alert alert-{{ label }} alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
{% endfor %}

<!-- Order List Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <form action="{{ path('orders_save_changes') }}" method="post" id="orders-form">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                      <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Order Date</th>
                        <th scope="col">Status</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col">Payment Method</th>
                        <th scope="col">Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      {% for order in orders %}
    <tr>
        <th scope="row">
            <div class="d-flex align-items-center">
                {% if order.produit %}
                    <img src="{{ order.produit.image is not empty ? asset('uploads/' ~ order.produit.image) : asset('img/default-image.jpg') }}" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                {% else %}
                    <img src="{{ asset('img/default-image.jpg') }}" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                {% endif %}
            </div>
        </th>
        <td><p class="mb-0 mt-4">{{ order.orderDate|date('Y-m-d') }}</p></td>
        <td><p class="mb-0 mt-4">{{ order.status }}</p></td>
        <td><p class="mb-0 mt-4 product-price">
            {% if order.produit %}
                {{ order.produit.price }} TND
            {% else %}
                N/A
            {% endif %}
        </p></td>
        <td>
            <div class="input-group quantity mt-4" style="width: 120px;">
                <div class="input-group-btn">
                    <button type="button" class="btn btn-sm btn-minus rounded-circle bg-light border">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
                <input type="number" 
                       name="orders[{{ order.id }}][quantity]" 
                       class="form-control form-control-sm text-center border-0 order-quantity" 
                       value="{% if order.produit %}{{ (order.total / order.produit.price)|round(0, 'floor') }}{% else %}0{% endif %}" 
                       min="0" 
                       max="{% if order.produit %}{{ order.produit.value }}{% else %}0{% endif %}" 
                       style="width: 60px;">
                <div class="input-group-btn">
                    <button type="button" class="btn btn-sm btn-plus rounded-circle bg-light border">
                        <i class="fa fa-plus"></i>
                    </button>
                </div>
            </div>
        </td>
        <td>
            <p class="mb-0 mt-4 order-total">{{ order.total }} TND</p>
        </td>
        <td>
            <div class="mt-4">
                <select class="form-control form-control-sm" name="orders[{{ order.id }}][payment_method]">
                    <option value="credit_card" {% if order.payment_method == 'credit_card' %}selected{% endif %}>Credit Card</option>
                    <option value="cash_on_delivery" {% if order.payment_method == 'cash_on_delivery' %}selected{% endif %}>Cash on Delivery</option>
                    <option value="paypal" {% if order.payment_method == 'paypal' %}selected{% endif %}>Paypal</option>
                </select>
            </div>
        </td>
        <td>
            <div class="d-flex flex-column align-items-start mt-4">
                <div class="mb-2 d-flex gap-2">
                    {% if order.status == 'pending' %}
                        <a href="{{ path('order_approve', {'id': order.id}) }}" class="btn btn-sm rounded-pill bg-success text-white">
                            Approve
                        </a>
                    {% elseif order.status == 'approved' %}
                        {# Utiliser une case à cocher pour marquer comme payé #}
                        <input type="checkbox" name="approved_orders[]" value="{{ order.id }}" id="approved_order_{{ order.id }}">
                        <label for="approved_order_{{ order.id }}" class="btn btn-sm rounded-pill bg-primary text-white">
                            Mark as Paid
                        </label>
                    {% endif %}
                    
<a href="#" class="btn btn-sm rounded-pill bg-warning text-white update-btn" 
   data-order-id="{{ order.id }}">
    <i class="fa fa-sync-alt me-1"></i> Update
</a>

                    
                    <a href="{{ path('order_delete', {'id': order.id}) }}" class="btn btn-sm rounded-circle bg-light border delete-btn" onclick="return confirm('Are you sure you want to delete this order?')">
                        <i class="fa fa-times text-danger me-1"></i>
                    </a>
                </div>
            </div>
        </td>
    </tr>
    {% endfor %}
                    </tbody>
                </table>
            </div>

            <div class="row g-4 justify-content-between">
                <!-- Order Total Card -->
                <div class="col-sm-12 col-md-6 col-lg-6">
                    <div class="bg-light rounded">
                        <div class="p-4">
                            <h1 class="display-6 mb-4">Order <span class="fw-normal">Total</span></h1>
                            <div class="d-flex justify-content-between mb-4">
                                <h5 class="mb-0 me-4">Subtotal:</h5>
                                <p class="mb-0" id="subtotal">
                                    {% set subtotal = 0 %}
                                    {% for order in orders %}
                                        {% set subtotal = subtotal + order.total %}
                                    {% endfor %}
                                    {{ subtotal|number_format(2) }} TND
                                </p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <h5 class="mb-0 me-4">Shipping</h5>
                                <div class="">
                                    <p class="mb-0">Flat rate: 3.00 TND</p>
                                </div>
                            </div>
                            <p class="mb-0 text-end">Shipping to Tunisia.</p>
                        </div>
                        <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                            <h5 class="mb-0 ps-4 me-4">Total</h5>
                            <p class="mb-0 pe-4" id="final-total">{{ (subtotal + 3)|number_format(2) }} TND</p>
                        </div>
                    </div>
                </div>
                
                <!-- Approved Orders Card -->
                <div class="col-sm-12 col-md-6 col-lg-6">
                    <div id="approved-orders-summary" class="bg-light rounded">
                        <div class="p-4">
                            <h1 class="display-6 mb-4">Approved <span class="fw-normal">Orders</span></h1>
                            <div id="approved-orders-list">
                                {% set hasApproved = false %}
                                {% for order in orders %}
                                    {% if order.status == 'approved' %}
                                        {% set hasApproved = true %}
                                        <div class="d-flex justify-content-between mb-2">
                                            <span>
                                                <span class="badge bg-warning rounded-circle me-1" style="width: 8px; height: 8px; display: inline-block;"></span>
                                                {% if order.produit %}{{ order.produit.name }}{% else %}Product{% endif %} 
                                                (x{{ order.produit ? (order.total / order.produit.price)|round(0, 'floor') : 0 }})
                                            </span>
                                            <span>{{ order.total }} TND</span>
                                        </div>
                                    {% endif %}
                                {% endfor %}
                                {% if not hasApproved %}
                                    <p class="text-muted">No approved orders yet.</p>
                                {% endif %}
                            </div>
                        </div>
                        <div class="p-4">
                            <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase w-100" type="submit">
                                Save All Changes
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<!-- Order List Page End -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle plus/minus buttons for quantity
    document.querySelectorAll('.btn-plus').forEach(function(button) {
        button.addEventListener('click', function() {
            const input = this.parentNode.parentNode.querySelector('.order-quantity');
            const max = parseInt(input.getAttribute('max'));
            let value = parseInt(input.value);
            
            if (value < max) {
                input.value = value + 1;
                updateOrderTotal(this);
            }
        });
    });
    
    document.querySelectorAll('.btn-minus').forEach(function(button) {
        button.addEventListener('click', function() {
            const input = this.parentNode.parentNode.querySelector('.order-quantity');
            let value = parseInt(input.value);
            
            if (value > 0) {
                input.value = value - 1;
                updateOrderTotal(this);
            }
        });
    });
document.querySelectorAll('.update-btn').forEach(function(button) {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        
        const row = this.closest('tr');
        const orderId = this.getAttribute('data-order-id');
        const paymentMethod = row.querySelector('select[name^="orders["][name$="][payment_method]"]').value;
        const quantity = row.querySelector('.order-quantity').value;
        
        // Créer un formulaire temporaire pour l'envoi des données
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/order/' + orderId + '/update'; // Ajustez le chemin selon votre route
        
        const tokenInput = document.createElement('input');
        tokenInput.type = 'hidden';
        tokenInput.name = '_token';
        tokenInput.value = '{{ csrf_token("update-order") }}'; // Assurez-vous d'ajuster ceci
        
        // Match the parameter name with what the controller expects
        const paymentMethodInput = document.createElement('input');
        paymentMethodInput.type = 'hidden';
        paymentMethodInput.name = 'payment_method'; // This should match the request->get() parameter name
        paymentMethodInput.value = paymentMethod;
        
        const quantityInput = document.createElement('input');
        quantityInput.type = 'hidden';
        quantityInput.name = 'quantity';
        quantityInput.value = quantity;
        
        form.appendChild(tokenInput);
        form.appendChild(paymentMethodInput);
        form.appendChild(quantityInput);
        
        document.body.appendChild(form);
        form.submit();
    });
});
    // Function to update order total
    function updateOrderTotal(element) {
        const row = element.closest('tr');
        const quantityInput = row.querySelector('.order-quantity');
        const priceElement = row.querySelector('.product-price');
        const totalElement = row.querySelector('.order-total');
        
        if (priceElement && quantityInput && totalElement) {
            const priceText = priceElement.textContent.trim();
            const price = parseFloat(priceText.replace(' TND', ''));
            const quantity = parseInt(quantityInput.value);
            const total = price * quantity;
            totalElement.textContent = total.toFixed(2) + ' TND';
            
            // Update subtotal
            updateSubtotal();
        }
    }
    
    // Calculate subtotal
    function updateSubtotal() {
        let subtotal = 0;
        document.querySelectorAll('.order-total').forEach(function(element) {
            const totalText = element.textContent.trim();
            const total = parseFloat(totalText.replace(' TND', ''));
            if (!isNaN(total)) {
                subtotal += total;
            }
        });
        
        // Update subtotal element
        const subtotalElement = document.getElementById('subtotal');
        if (subtotalElement) {
            subtotalElement.textContent = subtotal.toFixed(2) + ' TND';
        }
        
        // Update final total
        const finalTotalElement = document.getElementById('final-total');
        if (finalTotalElement) {
            finalTotalElement.textContent = (subtotal + 3.00).toFixed(2) + ' TND';
        }
    }
    
    // Initialize subtotal on page load
    updateSubtotal();
    
    // Update when quantity inputs change
    document.querySelectorAll('.order-quantity').forEach(function(input) {
        input.addEventListener('change', function() {
            updateOrderTotal(this);
        });
    });
});
</script>
{% endblock %}